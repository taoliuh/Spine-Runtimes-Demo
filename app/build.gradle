apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "me.lancer.spineruntimesdemo"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDir "assets"
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    configurations { natives }
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.badlogicgames.gdx:gdx-backend-android:1.9.10"
    compile "com.badlogicgames.gdx:gdx:1.9.10"
    compile "com.esotericsoftware.spine:spine-libgdx:3.8.55.1"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.10:natives-armeabi-v7a"
    testCompile 'junit:junit:4.12'
}

task copyAndroidNatives() {
    file("libs/armeabi-v7a/").mkdirs()

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}